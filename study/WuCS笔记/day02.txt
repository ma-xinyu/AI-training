目的：掌握Python开发语言

1. 项目与工程组织（语言结构-目录与文件管理）
	python管理工程的目录：
		| - OS的目录系统来管理（不推荐）
		| - python虚拟机的目录(包路径package)与文件（模块module）管理
			|- 项目路径（PYTHONPATH环境变量） 
				|- Python虚拟机在PYTHONPATH指定目录中查找py文件
				   python -m 包路径.包路径.模块   （模块就是python文件名）
		|- Python的查找路径：
			|- 当前路径
			|- $PYTHON_HOME/LIB/site-packages/
			|- 在PYTHONPATH指定的路径中查找（）
	Python目录内部管理
		包路径与模块
		使用：import 包路径.包路径.模块
	规范：
		包路径有规范：
			每个包路径建议创建一个__init__.py文件

---------------------------
补充1：
	命令： 获取window的指令help
		  获取帮助：help 指令名
	脚本编程：bat * / powershell
	在VSCodde中设置选择shell的类型bat（command prompt shell）

补充2：
	环境变量-PATH
	set查看所有环境变量
	定义环境环境变量： set 变量=值
	环境变量取值：echo %环境变量%
		|- 临时
		|- 用户
		|- 全局（系统）
	操作系统依赖环境变量工作
		执行程序依赖环境变量PATH：
			|- 当前路径查找
			|- ${WINDOW_HOME}/system32
			|- 在PATH变量指定的路径中查找
补充3：
	怎么知道我的程序是否找到呢？
	where 命令
	屏蔽path环境量
--------------------------
git服务器账号：http://39.98.127.39:3000

--------------------------

2. 语言结构-段，句，字
	2.1. python文件：
		|- 扩展名一定是py
		|- 文件名按照name规则命名
	2.2. python文件编码
		|- 显式指定 #encoding:utf-8
		|- 隐式指定： 保存使用utf-8 with bom(不推荐)
		|- 经常不需要关注编码：因为操作系统，python默认使用utf-8
	2.3. 字-空格，换行，tab，其他特殊
		|- 编译器内置的字：关键字/保留字
			|- 传统关键字（实际直接调用别人的模块打印）
			|- 字面值
				|- 逻辑值：True/False
				|- 字符串： ''  ""   ''' '''  """  """
				|- 整数： 十进制，十六进制
				|- 小数： 普通计数，科学计数法



		|- 用户命名字：name字：标识字identifier
			|- 命名规则：_， 字母开头， _,字母，数字构成
				|- 包路径
				|- 模块名
				|- 变量名
				|- 函数名
			字母：扩展字母，包含unicode字母
	
	2.4. 句 - 换行，\续行符
		计算机执行最小单位-字面值可以构成简单的语句。
		01. 数据语句（放在任何地方）
			申请空间
		02. 功能语句（函数中）
			计算与流程控制
			调用
	2.5. 段
		缩行

	----------
	段与句依赖一定的语法：
		字按照语法规则，形成语句
		句按照语法规则，形成段


3. 语法三要素 - 量（数据怎么放入计算机）
	01.空语句 pass
	02.注释语句 #
	03.数据语句完成空间的申请：
		语法： 变量名=字面值/另外变量/计算的结果
	04.输出语句
		print
	05.输入语句
		input(prompt=None, /)
			|- / 实际上不是python语法，语法现象来自Cython，表示含义/前的参数不允许使用参数名

		输入的是文本
	-----------------
	help(名) 获取在线帮助
	dir(对象)查看这个对象的成员
	----------------
	PYTHON编码规范PEP6.0 PEP8.0

例子：
	输入姓名与年龄，打印成表格	

4. 语法三要素 - 运算符/表达式
	算术运算： +  -  *  /  %  // **
	运算符形成表达式，= 功能语句
	关系运算: < <= == != > >=
	逻辑运算: and  or not
	位运算: & | ^ ~ >>  <<
	复合运算： += -= *= /= //= %= **=  &= |= ^= ~=
	其他运算[] . , ;  () + - 

	更加复杂运算：标准库提供数学模块实现更加复杂运算：三角函数，双曲函数，指数与对数，随机函数，取整函数等。与第三方运算

5. 语法三要素 - 控制执行流程
	选择控制
		if 条件:
			pass
			语句
		一共有如下几种：
		if cond:
			语句
			...

		if cond:
			语句
			...
		else:
			...


		if cond:
			...
		elif cond2:
			...
		slif cond3:
			...

		if cond:
			...
		elif cond2:
			...
		slif cond3:
			...		
		else:
			...

	循环控制
		for 循环变量 in 列表:
			....

		列表： (...) [...]

		while 条件:
			....
	----------
	python提供产生列表的方法：range

- 作业：
	
	1. 输入姓名， 年龄，成绩
		把输入结果保存，并输出为一个表格（制表符）

