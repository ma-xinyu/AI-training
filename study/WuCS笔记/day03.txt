0. 回顾：
	PYTHONPATH
	包路径（__init__.py）
		import 
	模块（python文件）
		句(基本单位)：由字构成：字面字，关键字，标识字：规则
		             段：缩行/对齐空格表示同一个段
		输入语句
		输出语句

	-------
	数据与量: 数据语句：语法格式
		|- 空间申请
		|- 空间赋值

	运算符实现计算：表达式：功能语句：存储（数据与量）
	运算过程控制：
		if
		for 变量 in  列表:   # 块头，冒号结束
			语句             # 块内容：功能语句，数据语句

1. 计算机计算过程的流程控制
	例子：
		打印矩形
	备注：
		PEP6, 8

-------------------------------------------------------------

2. 代码组织的方式-面向过程
	2.1. 整体命名法
		段头
		段提
	2.2. 段头语法：
		def 名字:
			语句
	2.3. 段体的语法：
		相同缩行（tab，空格）

	2.4. 段头提供输入与输出
		def 名字(输入数据，.....):
			语句
			return 输出1, 输出2, ....
	2.5. 调用
		名字（[参数名=]条件值, .....）

			如果某个参数使用了名字，后面的参数必须使用名字
			使用keyword参数好处，参数的顺序可以随意。不使用keyword参数，则必须按照def的顺寻设置。
		返回值
		变量 = 名字(参数)
-----------------------------
总结：
	语句
	段(块)
		1. 功能语句（面向过程）
		2. 数据语句/ 功能块（面向对象：超面向过程）


3. 代码组织的方式-面向对象
    3.1. 组织结构
	class 名字: 
		输入数据
		中间数据
		输出数据

		# ----------------
		处理过程1
		处理过程2
		处理过程3
	3.2. 语法
		输入数据/输出数据/中间数据
		提供一个过程完成定义__init__
		
		A. 构造器
		def __init__(self, 参数):
			# 定义数据

		B. 数据定义：
			self.数据 = 值
		C. 使用：
			定义对象(初始化数据)
				对象名 = 类名(条件)

			调用对象的过程：处理数据
				[ 接受变量 = ]对象名.函数(参数)



4. git工具-提交项目代码/项目工程
	39.98.127.39：3000
	4.1. 使用浏览器登录到git服务器，创建仓库等。

	4.2. 场景1：第一次创建仓库初始化，提交master公共文件
		README.md
		其他文件
		01. 创建工作目录
			并且使用cd切换到工作路径   cd \
		02. 初始化为本地仓库
			git init
		03. 第一次使用需要设置个人的名字与邮件
			git config --global user.name "yangqiang"
			git config --global user.email "38395870@11.com"
		--------------------------------
		04. 编码工作 + README.md
			- README.md建议创建
		05. 添加代码到仓库
			git add  *

		06. 设置提交的信息
			git commit -m 第一从更新 -a

		07. 提交前设置服务器参数
			- 设置本地代理名
			查看：git remote -v
			设置：git remote add yang http://yangqiang:yang123@39.98.127.39:3000/yangqiang/Test2019.git
		08. 物理更新服务器代码
			git push --set-upstream yang master (master分支名，服务器默认的分支是master)




	- 补充：
		下载路径：https://git-scm.com/
		PATH：C:\Program Files\Git\bin

	4.3. 场景2：使用分支提交代码

	4.4. 场景2：代码合并，形成最终的版本
--------------------




作业1：
	仿照上课的三角形，打印乘法口诀表
作业2：（直接使用线性代码实现）
	把上课的菱形，根据条件的变化，绘制至少5中图形
作业3：
	绘制以色列国旗
作业4：
	把作业2使用面向过程实现
	把作业2使用面向对象实现；
作业5.
	使用git提交代码到服务器
	作业提交：星期四之前，与明天一起提交。
