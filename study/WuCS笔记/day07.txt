1. 项目的安排
	第一阶段：
		项目GUI  +   AI基础技术（数据集处理 + 机器学习[特征的分类] + 深度学习[特征的学习]）
													|                |
													------------------
													         |
													 模型实现 + 模型训练    
	第二阶段：
		实现模型  +  AI工程技术（数据集标签 + 数据集工程 + 目标侦测 + AI推理模型）


	第三阶段：
		完成项目 + 项目发布（PPT + 视频 + 提交成果物 + 实训总结）

2. 上课的方式
	两个部分： 项目工程的指导 + 技术补充

---------------------------------- 
1. 实训任务（交通监控项目 + 手写数字识别作为背景）
	01. 技术结构
		逻辑结构：
			两层 GUI + Business（数据采集层 + 数据训练/推理处理层）
				 Qt  +           OpenCV       PyTorch(Torch C++)

			结构中体现：业务流程
			工具：
				PPT：
				其他：processon.com

	02. 项目类图
		两个类图：
			最终应用项目：
			模型训练项目：
				|- 登录模型
				|- 业务模型
	03. 设计文档
		A. 结构设计（图 + 文本说明）
		B. 类图设计（图 + 类说明）
		C. 项目工程的包路径与模块
		D. 运算环境


补充：
	UML2
		9图：5静态图 + 4动态图
			|- 部署图
			|- 组件图
			|- 用例图
			|- 对象图 -> 时序图  *
						 |- 协作图
						 |- 活动图-| - 函数为节点
						 |- 状态图-| - 数据为节点
			|- 类图   -> 时序图
						 |- 协作图
						 |- 活动图-| - 函数为节点
						 |- 状态图-| - 数据为节点



	提交：星期六完成所有的设计文档
	要求：
		石墨工具
		注册账号
		组长创建一个工作区，添加组员为协作者
	评奖：
		A. 2遍技术文档（小组）
		B. 项目（小组）
		C. 文档（设计文档）


2. 技术补充
	01. 图像的特征与特征学习
	笔记：jupyter
	项目：昨天基础上添加图像处理
	A. 条件
		pip install jupyterlab
		最好安装nodejs, 然后在jupyter lab中安装toc插件。
	B.jupyter lab
		启动: jupyter lab
		创建notebook文档
		创建单元格：快捷键：b， 单元格格式：code/markdown, 切换：M
		命名文档
	C. 卷积的概念 = 平滑 = 滤波
		离散化：模板内积运算

	D. 图像特征
		像素的变化
			|- 变化：距离的变化 = 速度
			        微积分中变化 = 梯度 = 微分 = 求导 ： 图像的导数 = 图像的特征= 特征图
		图像的导数？

	Source Image -(Kernel) > Feature Map

	E. 机器学习就是：找到一个Kernel，是的Feature Map更加容易识别（分类/侦测/分割/跟踪）
		- 卷积运算s -> 特征 -> 分类： 卷积神经网络 

	补充：
		LaTex语法：https://www.jianshu.com/p/d26c0b3b71ea


作业：
	1. 视频采集中添加特征处理功能
		|- https://docs.opencv.org/4.2.0/d4/d86/group__imgproc__filter.html
	2. 使用PPT等绘制项目结构 （基于项目逻辑：每个小组组长开例会讨论）
		|- 提交事件：星期天之前
		|- 工具：腾讯会议  （团队）
			|- 开会之前知会冯老师
